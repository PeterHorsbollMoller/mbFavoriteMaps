'*******************************************************************************
'**   Created by Peter Horsbøll Møller, Pitney Bowes Software
'** 	Program:
'** 	Modul:
'**
'*******************************************************************************
'	31-08-2015 11:30:41	- Recompiled and Linked with the latest mbLibrary modules
'	03-10-2023 07:41:50 - Support for specifying PuttonType in Config File: ControlType_DropDownButton or ControlType_SplitButton
'					- Support for specifying PanelType in Config File: ControlType_DropDownMenuGroup, ControlType_StackPanel, ControlType_WrapPanel
'*******************************************************************************

'-------------------------------------
Include "MapBasic.def"
Include "Icons.def"
Include "Menu.def"
'**default constants...
Include "Library\Defaults.def"

Define xProgram 		"FavoriteMaps"
Define xVersion 		"1.2.0"
Define xYear			"2023"
Define xAddToMenuBar	FALSE

Define FILE_INI			ApplicationDirectory$() & xProgram & ".ini"
Define FILE_DBG			ApplicationDirectory$() & xProgram & ".dbg"
'Define FILE_DLL			ApplicationDirectory$() & xProgram & ".dll"
Define FILE_PAD			GetFolderPath$(FOLDER_MI_PREFERENCE) & xProgram & ".btp"

Define FILE_IMAGE_DEFAULT	ApplicationDirectory$() & "Images\BaseMap_Grey_32x32.png"

Include "Enums.def"

Include "Library\MI_ICONS_X64.def"
Include "Library\RibbonElements.def"

Include "Library\CONFIGFILELib.def"
Include "Library\DEBUGLib.def"
Include "Library\ERRORLib.def"
Include "Library\FILELib.def"
Include "Library\LAYERLib.def"
Include "Library\MAPPERLib.def"
Include "Library\ProgramInfo.def"
Include "Library\RIBBONLib.def"
Include "Library\Types\T_LAYER_SETTINGS.def"
Include "Library\Types\T_LABEL_SETTINGS.def"
Include "Library\Types\T_LAYER_INFO.def"

Include "DLGFMCFavoriteMapConfig.def"

Type T_COMMAND_FAVORITE_MAP
	nCommandId			As Integer
	nFavoriteMapItem		As Integer
End Type

Type T_FAVORITE_GROUP
	sCaption				As String
	arrNames()			As String		'One name for each tab the controls are added to
End Type

Type T_ADD_TO_RIBBON
	sTabName				As String
	sGroupName			As String
	sAddAfterControlName	As String
	sAddBeforeControlName	As String
End Type

Declare Sub Main
Declare Sub EndHandler

Declare Sub MENUReadConfigFile

Declare Sub MENUOpenFavoriteMap(ByVal nItem As Integer)
Declare Sub MENUFavoriteMapClicked

Declare Function MENUGetFavoriteGroupName( ByVal sCaption As String, ByVal nTab As Integer) As String
Declare Function MENUGetFavoriteGroupItem( ByVal sCaption As String, ByVal nTab As Integer) As Integer
Declare Sub MENUSetFavoriteGroupName( ByVal sCaption As String, ByVal nTab As Integer, ByVal sName As String)
Declare Function MENUGetFavoriteMapItemFromTabFile( ByVal sTabFile As String) As Integer

Declare Sub MENUAddFavoriteMapLC
Declare Sub MENUModifyFavoriteMapLC
Declare Sub MENUSaveLayerSettingsLC

Dim	mnImageSize, mnButtonWidth, mnWrapPanelWidth, mnButtonType, mnPanelType As Integer,
	mbShowSaveLayerSettingMenu, mbShowAddLayerMenu As Logical,
	msButtonCaption As String,
	marrAddToRibbon() As T_ADD_TO_RIBBON,
	marrFavoriteGroups() As T_FAVORITE_GROUP,
	marrCommand2FavoriteMap() As T_COMMAND_FAVORITE_MAP,
	marrFavoriteMaps() As T_FAVORITE_MAP
'*************************************
Sub Main

Dim	nCtrlIdx, nTab, nCtrl, nCount, nGroupItem As Integer,
	sDropDButtonName As String

OnError GoTo ErrorOccured

	If NOT SystemInfo(SYS_INFO_MAPINFO_INTERFACE) = MIINTERFACE_RIBBON Then
		Note "Please note that this application has been designed for the Ribbon interface only. It will not work on the classic menubased interface"
		End Program
	End If

	'***Enabling Debug if file exists
	Call DEBUGEnableByFile(FILE_DBG)

	'***Initializing ProgramInfo
	Call PRGISetApplicationName(xProgram)
	Call PRGISetApplicationVersion(xVersion)
	Call PRGISetApplicationCopyrightYear(xYear)
	Call PRGISetApplicationDevelopedBy("Peter Horsbøll Møller")
	Call PRGISetApplicationImageUri(MI_IMG_MAP_ADDBASEMAP_32)
	Call PRGISetDescription("This tools lets you add shortcuts to your favorite maps or tables to the Ribbon interface.")

	Call MENUReadConfigFile

	If Ubound(marrFavoriteMaps) = 0 Then
		Note "Please add at least one favorite map to the configuration file: " & FILE_INI
		End Program
	ElseIf Ubound(marrAddToRibbon) = 0 Then
		Note "Please specify at least one tab to add the favorite maps to using the configuration file: " & FILE_INI
		End Program
	End If

	'**Adding the Favorite Maps DropDButton to the required tabs
	For nTab = 1 To Ubound(marrAddToRibbon)
		If marrAddToRibbon(nTab).sTabName = "tabFavoriteMaps" Then
			'Call DEBUGPrint(nTab & ": Adding custom tab called FAVORITE MAPS")
			If NOT RBNTabExists(marrAddToRibbon(nTab).sTabName) Then
				nCtrlIdx = RBNAddTab(marrAddToRibbon(nTab).sTabName, msButtonCaption, "F")
				If nCtrlIdx = 0 Then
					Note "An error occured while adding a new tab called & '" & marrAddToRibbon(nTab).sTabName & "' to the ribbon!"
					Exit Sub
				End If
			End If

			If NOT RBNTabGroupExists(marrAddToRibbon(nTab).sTabName, marrAddToRibbon(nTab).sGroupName) Then
				nCtrlIdx = RBNTabAddGroup(marrAddToRibbon(nTab).sGroupName, msButtonCaption, marrAddToRibbon(nTab).sTabName)
				If NOT nCtrlIdx > 0 Then
					Exit Sub
				End If
			End If

			For nCtrl = 1 To Ubound(marrFavoriteMaps)
				'Call DEBUGPrint(nCtrl & ": Button " & marrFavoriteMaps(nCtrl).sName & " to tab FAVORITE MAPS")
				nCtrlIdx = RBNGroupAddButton("openBaseMap" & nCtrl, marrFavoriteMaps(nCtrl).sName, "", marrAddToRibbon(nTab).sTabName, marrAddToRibbon(nTab).sGroupName)
				If nCtrlIdx > 0 Then
					'Create & Set the button tooltip
					Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), marrFavoriteMaps(nCtrl).sName, "")
					'Set the button icon
					Call RBNControlSetIconsIdx(nCtrlIdx, mnImageSize, "", marrFavoriteMaps(nCtrl).sImageFile)
					'Set Custom MapBasic Handle to the button
					Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MENUFavoriteMapClicked")

					nCount = Ubound(marrCommand2FavoriteMap) + 1
					ReDim marrCommand2FavoriteMap(nCount)
					marrCommand2FavoriteMap(nCount).nCommandId		= RBNControlGetControlIDIdx(nCtrlIdx)
					marrCommand2FavoriteMap(nCount).nFavoriteMapItem	= nCtrl

				End If
			Next
		Else
			'Adding a DropDButton/SplitButton
			sDropDButtonName	= "sbtn" & marrAddToRibbon(nTab).sTabName & "FavoriteMaps"
			If marrAddToRibbon(nTab).sAddAfterControlName <> "" Then
				'Call DEBUGPrint(nTab & ": inserting DropDButton to the tab called " & marrAddToRibbon(nTab).sTabName & " after " & marrAddToRibbon(nTab).sAddAfterControlName)
				nCtrlIdx	= RBNGroupInsertControlAfter(sDropDButtonName, msButtonCaption, "", mnButtonType, marrAddToRibbon(nTab).sTabName, marrAddToRibbon(nTab).sGroupName, marrAddToRibbon(nTab).sAddAfterControlName)
			ElseIf marrAddToRibbon(nTab).sAddBeforeControlName <> "" Then
				'Call DEBUGPrint(nTab & ": inserting DropDButton to the tab called " & marrAddToRibbon(nTab).sTabName & " before " & marrAddToRibbon(nTab).sAddBeforeControlName)
				nCtrlIdx	= RBNGroupInsertControlBefore(sDropDButtonName, msButtonCaption, "", mnButtonType, marrAddToRibbon(nTab).sTabName, marrAddToRibbon(nTab).sGroupName, marrAddToRibbon(nTab).sAddBeforeControlName)
			Else
				'Call DEBUGPrint(nTab & ": Adding DropDButton to the tab called " & marrAddToRibbon(nTab).sTabName)
				nCtrlIdx	= RBNGroupAddControl(sDropDButtonName, msButtonCaption, "", mnButtonType, marrAddToRibbon(nTab).sTabName, marrAddToRibbon(nTab).sGroupName)
			End If

			If nCtrlIdx > 0 Then
				'Set the button icon
				Call RBNControlSetIconsIdx(nCtrlIdx, mnImageSize, "", marrFavoriteMaps(1).sImageFile)
				Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MENUFavoriteMapClicked")
				nCount = Ubound(marrCommand2FavoriteMap) + 1
				ReDim marrCommand2FavoriteMap(nCount)
				marrCommand2FavoriteMap(nCount).nCommandId		= RBNControlGetControlIDIdx(nCtrlIdx)
				marrCommand2FavoriteMap(nCount).nFavoriteMapItem	= 1

				For nCtrl = 1 To Ubound(marrFavoriteMaps)

					nGroupItem = MENUGetFavoriteGroupItem(marrFavoriteMaps(nCtrl).sCustomGroupName, nTab)
					If marrFavoriteGroups(nGroupItem).arrNames(nTab) = "" Then
						marrFavoriteGroups(nGroupItem).arrNames(nTab)	= "dbtnngrp_" & nGroupItem & "_" & PathToTableName$(marrFavoriteMaps(nCtrl).sCustomGroupName)
'						Call DEBUGPrint("Adding new WrapPanel '" & marrFavoriteGroups(nGroupItem).arrNames(nTab) & "'")

						'**Adding a WrapPanel to the new DropDButton
						nCtrlIdx = RBNSplitButtonAddControl(marrFavoriteGroups(nGroupItem).arrNames(nTab), marrFavoriteMaps(nCtrl).sCustomGroupName, mnPanelType, marrAddToRibbon(nTab).sTabName, marrAddToRibbon(nTab).sGroupName, sDropDButtonName)
						'nCtrlIdx = RBNSplitButtonAddControl(marrFavoriteGroups(nGroupItem).arrNames(nTab), marrFavoriteMaps(nCtrl).sCustomGroupName, ControlType_DropDownMenuGroup, marrAddToRibbon(nTab).sTabName, marrAddToRibbon(nTab).sGroupName, sDropDButtonName)

						Call RBNControlSetOrientationIdx(nCtrlIdx, Orient_Horizontal)
						Call RBNControlSetWidthIdx(nCtrlIdx, mnWrapPanelWidth)
'						Call DEBUGPrint("New WrapPanel '" & marrFavoriteGroups(nGroupItem).arrNames(nTab) & "' added")
					Else
						'WrapPanel already added
					End If

'					Call DEBUGPrint("Adding Button '" & sDropDButtonName & "_" & nCtrl & "' to WrapPanel '" & marrFavoriteGroups(nGroupItem).arrNames(nTab) & "'")
					nCtrlIdx = RBNSplitButtonGroupAddControl(sDropDButtonName & "_" & nCtrl, marrFavoriteMaps(nCtrl).sName, ""
									, ControlType_Button, marrAddToRibbon(nTab).sTabName, marrAddToRibbon(nTab).sGroupName, sDropDButtonName, marrFavoriteGroups(nGroupItem).arrNames(nTab))
					If nCtrlIdx > 0 Then
						'Create & Set the button tooltip
						Call RBNControlSetToolTipIdx(nCtrlIdx, PRGIGetApplicationName(), marrFavoriteMaps(nCtrl).sName, "")
						Call RBNControlSetIconsIdx(nCtrlIdx, mnImageSize, "", marrFavoriteMaps(nCtrl).sImageFile)
						Call RBNControlSetCustomMBXHandlerIdx(nCtrlIdx, "MENUFavoriteMapClicked")
						Call RBNControlSetWidthIdx(nCtrlIdx, mnButtonWidth)

						nCount = Ubound(marrCommand2FavoriteMap) + 1
						ReDim marrCommand2FavoriteMap(nCount)
						marrCommand2FavoriteMap(nCount).nCommandId		= RBNControlGetControlIDIdx(nCtrlIdx)
						marrCommand2FavoriteMap(nCount).nFavoriteMapItem	= nCtrl
					End If
'					Call DEBUGPrint("New Button '" & sDropDButtonName & "_" & nCtrl & "' added to '" & marrFavoriteGroups(nGroupItem).arrNames(nTab) & "'")
				Next
			End If
		End If
	Next

	If mbShowSaveLayerSettingMenu And mbShowAddLayerMenu Then
		Alter Menu ID M_SHORTCUT_LC_LAYERS
			Add
				"(-",
				"Add layer to Favorite Maps"
					HelpMsg "Add layer to Favorite Maps"
					Calling MENUAddFavoriteMapLC,
				"Modify Favorite Map"
					HelpMsg "Modify Favorite Map"
					Calling MENUModifyFavoriteMapLC,
				"Save layer settings for Favorite Maps"
					HelpMsg "Save layer setting for Favorite Maps"
					Calling MENUSaveLayerSettingsLC
	ElseIf mbShowSaveLayerSettingMenu Then
		Alter Menu ID M_SHORTCUT_LC_LAYERS
			Add
				"(-",
				"Modify Favorite Map"
					HelpMsg "Modify Favorite Map"
					Calling MENUModifyFavoriteMapLC,
				"Save layer settings for Favorite Maps"
					HelpMsg "Save layer setting for Favorite Maps"
					Calling MENUSaveLayerSettingsLC
	ElseIf mbShowAddLayerMenu Then
		Alter Menu ID M_SHORTCUT_LC_LAYERS
			Add
				"(-",
				"Add layer to Favorite Maps"
					HelpMsg "Add layer to Favorite Maps"
					Calling MENUAddFavoriteMapLC
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "Main")
	Call ERRShow()

End Sub

'*************************************
Sub Endhandler

OnError GoTo ErrorOccured

	'**Ask the RibbonLib to tidy up before the app ends
	Call RBNEndHandler
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "Endhandler")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function MENUGetFavoriteGroupName( ByVal sCaption As String, ByVal nTab As Integer) As String

Dim i As Integer

OnError GoTo ErrorOccured

MENUGetFavoriteGroupName = ""

	For i = 1 To Ubound(marrFavoriteGroups)
		If marrFavoriteGroups(i).sCaption = sCaption Then
			MENUGetFavoriteGroupName = marrFavoriteGroups(i).arrNames(nTab)
			Exit Function
		End If
	Next

	'**Not found - using the name of the first group
	MENUGetFavoriteGroupName = marrFavoriteGroups(1).arrNames(nTab)

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUGetFavoriteGroupName")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function MENUGetFavoriteGroupItem( ByVal sCaption As String) As Integer

Dim	i As Integer

OnError GoTo ErrorOccured

MENUGetFavoriteGroupItem = 0

'	Call DEBUGPrint("Looking for " & sCaption & " amongst " & Ubound(marrFavoriteGroups) & " groups")
	For i = 1 To Ubound(marrFavoriteGroups)
		If marrFavoriteGroups(i).sCaption = sCaption Then
'			Call DEBUGPrint("   was found as #" & i)
			MENUGetFavoriteGroupItem = i
			Exit Function
		End If
	Next

	'**Not found - using the name of the first group
'	Call DEBUGPrint("   wasn't found. Using #1")
	MENUGetFavoriteGroupItem = 1

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUGetFavoriteGroupItem")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub MENUSetFavoriteGroupName( ByVal sCaption As String, ByVal nTab As Integer, ByVal sName As String)

Dim i As Integer

OnError GoTo ErrorOccured

	For i = 1 To Ubound(marrFavoriteGroups)
		If marrFavoriteGroups(i).sCaption = sCaption Then
			marrFavoriteGroups(i).arrNames(nTab)	= sName
			Exit Sub
		End If
	Next

	'**Not found - setting the name of the first group
	marrFavoriteGroups(1).arrNames(nTab)	= sName

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUSetFavoriteGroupName")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function MENUGetFavoriteMapItemFromTabFile( ByVal sTabFile As String) As Integer

Dim	i As Integer

OnError GoTo ErrorOccured

MENUGetFavoriteMapItemFromTabFile = 0

'	Call DEBUGPrint("Looking for " & sTabFile & " amongst " & Ubound(marrFavoriteMaps) & " maps")
	For i = 1 To Ubound(marrFavoriteMaps)
		If marrFavoriteMaps(i).sTabFile = sTabFile Then
'			Call DEBUGPrint("   was found as #" & i)
			MENUGetFavoriteMapItemFromTabFile = i
			Exit Function
		End If
	Next

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUGetFavoriteMapItemFromTabFile")
	Call ERRShow()

End Function


'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub MENUAddFavoriteMapLC

Dim	i, nMID, nLayers, nLayer, nMap As Integer,
	tlbs As T_LABEL_SETTINGS,
	tls As T_LAYER_SETTINGS

OnError GoTo ErrorOccured

	For i = 1 To LayerControlInfo(LC_INFO_SEL_COUNT)
		nMID		= LayerControlSelectionInfo (i, LC_SEL_INFO_MAPWIN_ID)
		nLayer	= LayerControlSelectionInfo(i, LC_SEL_INFO_LAYER_ID)

		If NOT LayerInfo(nMID, nLayer, LAYER_INFO_TYPE) IN (LAYER_INFO_TYPE_COSMETIC, LAYER_INFO_TYPE_THEMATIC) Then

			nMap	= Ubound(marrFavoriteMaps) + 1
			ReDim marrFavoriteMaps(nMap)

			marrFavoriteMaps(nMap).sName				= IIf(LayerInfo(nMID, nLayer, LAYER_INFO_FRIENDLYNAME)="", LayerInfo(nMID, nLayer, LAYER_INFO_NAME), LayerInfo(nMID, nLayer, LAYER_INFO_FRIENDLYNAME))
			marrFavoriteMaps(nMap).sTabFile			= TableInfo(LayerInfo(nMID, nLayer, LAYER_INFO_NAME), TAB_INFO_TABFILE)
			marrFavoriteMaps(nMap).sImageFile			= FILE_IMAGE_DEFAULT
			marrFavoriteMaps(nMap).sCustomGroupName		= marrFavoriteGroups(1).sCaption

			marrFavoriteMaps(nMap).bShowOnCustomList	= TRUE
			marrFavoriteMaps(nMap).bShowOnOpenList		= TRUE

			Call tlsGetInfo(nMID, nLayer, tls)
			marrFavoriteMaps(nMap).sLyrSettings 		= tlsToString(tls)
			Call tlbsGetInfo(nMID, nLayer, tlbs)
			marrFavoriteMaps(nMap).sLblSettings 		= tlbsToString(tlbs)

			Call DEBUGPrint("A1 Name:" & marrFavoriteMaps(nMap).sName & ".")
			If DLGFMCFavoriteMapConfig(marrFavoriteMaps(nMap)) Then
				Call DEBUGPrint("A2 Name:" & marrFavoriteMaps(nMap).sName & ".")
				Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "NAME", marrFavoriteMaps(nMap).sName)
				Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "IMAGEFILE", FILEGetRelativePath(ApplicationDirectory$(), marrFavoriteMaps(nMap).sImageFile))
				Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "TABFILE", FILEGetRelativePath(ApplicationDirectory$(), marrFavoriteMaps(nMap).sTabFile))

				Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "SHOWONOPENCTRL", IIf(marrFavoriteMaps(nMap).bShowOnOpenList, "1", "0"))
				Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "SHOWONCUSTOMCTRL", IIf(marrFavoriteMaps(nMap).bShowOnCustomList, "1", "0"))
				Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "CUSTOMGROUPNAME", marrFavoriteMaps(nMap).sCustomGroupName)

				Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "LAYERSETTING", marrFavoriteMaps(nMap).sLyrSettings)
				Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "LABELSETTING", marrFavoriteMaps(nMap).sLblSettings)

				Call RBNNotificationShow(PRGIGetApplicationName(), "Map was added. It will appear when you restart the Favorite Maps add-in!", Notify_Info, 5000)
			Else
				nMap	= nMap - 1
				ReDim marrFavoriteMaps(nMap)
			End If
		Else
			Call RBNNotificationShowAtCursor(PRGIGetApplicationName(), "Cosmetic and Thematic layers can't be added as favorite maps!", Notify_Error, 5000)
		End If
	Next
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUAddFavoriteMapLC")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub MENUModifyFavoriteMapLC

Dim	i, nMID, nLayers, nLayer, nMap As Integer,
	sTabFile As String,
	tlbs As T_LABEL_SETTINGS,
	tls As T_LAYER_SETTINGS

OnError GoTo ErrorOccured

	For i = 1 To LayerControlInfo(LC_INFO_SEL_COUNT)
		nMID		= LayerControlSelectionInfo (i, LC_SEL_INFO_MAPWIN_ID)
		nLayer	= LayerControlSelectionInfo(i, LC_SEL_INFO_LAYER_ID)

		If NOT LayerInfo(nMID, nLayer, LAYER_INFO_TYPE) IN (LAYER_INFO_TYPE_COSMETIC, LAYER_INFO_TYPE_THEMATIC) Then
			sTabFile = TableInfo(LayerInfo(nMID, nLayer, LAYER_INFO_NAME), TAB_INFO_TABFILE)

			nMap = MENUGetFavoriteMapItemFromTabFile(sTabFile)
			If nMap > 0 Then
				If DLGFMCFavoriteMapConfig(marrFavoriteMaps(nMap)) Then
					Call tlsGetInfo(nMID, nLayer, tls)
					marrFavoriteMaps(nMap).sLyrSettings = tlsToString(tls)
					Call tlbsGetInfo(nMID, nLayer, tlbs)
					marrFavoriteMaps(nMap).sLblSettings = tlbsToString(tlbs)

					Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "NAME", marrFavoriteMaps(nMap).sName)
					Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "IMAGEFILE", FILEGetRelativePath(ApplicationDirectory$(), marrFavoriteMaps(nMap).sImageFile))
					Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "TABFILE", FILEGetRelativePath(ApplicationDirectory$(), marrFavoriteMaps(nMap).sTabFile))

					Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "SHOWONOPENCTRL", IIf(marrFavoriteMaps(nMap).bShowOnOpenList, "1", "0"))
					Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "SHOWONCUSTOMCTRL", IIf(marrFavoriteMaps(nMap).bShowOnCustomList, "1", "0"))
					Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "CUSTOMGROUPNAME", marrFavoriteMaps(nMap).sCustomGroupName)

					Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "LAYERSETTING", marrFavoriteMaps(nMap).sLyrSettings)
					Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "LABELSETTING", marrFavoriteMaps(nMap).sLblSettings)
				End If
			Else
				Call RBNNotificationShowAtCursor(PRGIGetApplicationName(), "No favorite map found for this tab file: " & sTabFile, Notify_Error, 5000)
			End If
		Else
			Call RBNNotificationShowAtCursor(PRGIGetApplicationName(), "Cosmetic and Thematic layers can't be favorite maps!", Notify_Error, 5000)
		End If
	Next
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUModifyFavoriteMapLC")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub MENUSaveLayerSettingsLC

Dim	i, nMID, nLayers, nLayer, nMap As Integer,
	sTabFile As String,
	tlbs As T_LABEL_SETTINGS,
	tls As T_LAYER_SETTINGS

OnError GoTo ErrorOccured

	For i = 1 To LayerControlInfo(LC_INFO_SEL_COUNT)
		nMID		= LayerControlSelectionInfo (i, LC_SEL_INFO_MAPWIN_ID)
		nLayer	= LayerControlSelectionInfo(i, LC_SEL_INFO_LAYER_ID)

		If NOT LayerInfo(nMID, nLayer, LAYER_INFO_TYPE) IN (LAYER_INFO_TYPE_COSMETIC, LAYER_INFO_TYPE_THEMATIC) Then
			sTabFile = TableInfo(LayerInfo(nMID, nLayer, LAYER_INFO_NAME), TAB_INFO_TABFILE)

			nMap = MENUGetFavoriteMapItemFromTabFile(sTabFile)
			If nMap > 0 Then
				Call tlsGetInfo(nMID, nLayer, tls)
				marrFavoriteMaps(nMap).sLyrSettings = tlsToString(tls)
				Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "LAYERSETTING", marrFavoriteMaps(nMap).sLyrSettings)

				Call tlbsGetInfo(nMID, nLayer, tlbs)
				marrFavoriteMaps(nMap).sLblSettings = tlbsToString(tlbs)
				Call CONFIGWriteKey(FILE_INI, "FAVORITE MAPS " & nMap, "LABELSETTING", marrFavoriteMaps(nMap).sLblSettings)
			Else
				Call RBNNotificationShowAtCursor(PRGIGetApplicationName(), "No favorite map found for this tab file: " & sTabFile, Notify_Error, 5000)
			End If
		Else
			Call RBNNotificationShowAtCursor(PRGIGetApplicationName(), "Cosmetic and Thematic layers can't be favorite maps!", Notify_Error, 5000)
		End If
	Next
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUSaveLayerSettingsLC")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Software
'Parameters:
'
'**********************************************************************************************''
Sub MENUOpenFavoriteMap(ByVal nItem As Integer)

Dim	nMID, nLayer As Integer,
	sTab As String,
	tli As T_LAYER_INFO

OnError GoTo ErrorOccured

'	Call DEBUGPrint("Trying to open item " & nItem)

	Call RBNNotificationShow(PRGIGetApplicationName(), "Opening Base Map '" & marrFavoriteMaps(nItem).sName & "'", Notify_Info, 2000)

	If Not FileExists(marrFavoriteMaps(nItem).sTabFile) Then
		Note "Tab file doesn't exist: " & marrFavoriteMaps(nItem).sTabFile
		Exit Sub
	End If

	Open Table marrFavoriteMaps(nItem).sTabFile Interactive
	sTab = PathToTableName$(marrFavoriteMaps(nItem).sTabFile)

	nMID = MAPFrontMostWindow()
	If nMID = 0 Then
		Map From sTab
		nMID = MAPFrontMostWindow()
		nLayer = 1
	Else
		Add Map
			Window nMID
			Auto
			Layer sTab
		nLayer = LAYERGetLayerNumber(nMID, sTab)
	End If

	If nLayer > 0 Then
		tli.nMID	= nMID
		tli.sName	= sTab

		If marrFavoriteMaps(nItem).sLyrSettings <> "" Then
			If tlsFromString(tli.tlsLyrSettings, marrFavoriteMaps(nItem).sLyrSettings) Then

			End If
		End If
		If marrFavoriteMaps(nItem).sLblSettings <> "" Then
			If tlbsFromString(tli.tlbsLblSettings, marrFavoriteMaps(nItem).sLblSettings) Then

			End If
		End If

		If marrFavoriteMaps(nItem).sLyrSettings <> "" OR marrFavoriteMaps(nItem).sLblSettings <> "" Then
			If tliApplyInfo(nMID, nLayer, tli) Then
'				Call DEBUGPrint("Layer and/or label settings were applied to the layer!")
			End If
		End If
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUOpenFavoriteMap: " & nItem)
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Business Insight
'Parameters:
'
'**********************************************************************************************''
Sub MENUFavoriteMapClicked

Dim	nMapItem, nCtrlID, nItem As Integer

OnError GoTo ErrorOccured

	nCtrlID	= CommandInfo(CMD_INFO_TOOLBTN)
'	Call DEBUGPrint("The user clicked on Ctrl ID " & nCtrlID)

	For nItem = 1 To Ubound(marrCommand2FavoriteMap)
		If marrCommand2FavoriteMap(nItem).nCommandId = nCtrlID Then
			nMapItem = marrCommand2FavoriteMap(nItem).nFavoriteMapItem
			Exit For
		End If
	Next

'	Call DEBUGPrint("... matching Map Item " & nMapItem & " " & marrFavoriteMaps(nMapItem).sName)
	Call MENUOpenFavoriteMap(nMapItem)

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUFavoriteMapClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Business Insight
'Parameters:
'
'**********************************************************************************************''
Sub MENUReadConfigFile

Dim	i, nMap, nCount, nNoneFound As Integer,
	sName, sCaption, sImageFile, sTabFile As String

OnError GoTo ErrorOccured

'[FAVORITE MAPS 1]
'NAME=Basemap Colours
'TABFILE=BaseMaps\BaseMap.tab
'IMAGEFILE=Images\BaseMap_32x32.png
'LAYERSETTING=
'LABELSETTING=

'	Call DEBUGPrint("MENUReadConfigFile:" & FILE_INI)

	If CONFIGReadKey(FILE_INI, "SETTINGS", "ADDTOCUSTOMTAB") = "1" Then
		i = i + 1
		Redim marrAddToRibbon(i)
		marrAddToRibbon(i).sTabName				= "tabFavoriteMaps"
		marrAddToRibbon(i).sGroupName				= "grpFavoriteMaps"
	End If
	If CONFIGReadKey(FILE_INI, "SETTINGS", "ADDTOHOMETAB") = "1" Then
		i = i + 1
		Redim marrAddToRibbon(i)
		marrAddToRibbon(i).sTabName				= TAB_HOME
		marrAddToRibbon(i).sGroupName				= TAB_GROUP_HOME_FILE
		marrAddToRibbon(i).sAddBeforeControlName	= "HomeSaveWorkspaceSplitButton"
	End If
	If CONFIGReadKey(FILE_INI, "SETTINGS", "ADDTOTABLETAB") = "1" Then
		i = i + 1
		Redim marrAddToRibbon(i)
		marrAddToRibbon(i).sTabName				= TAB_TABLE
		marrAddToRibbon(i).sGroupName				= TAB_GROUP_TABLE_DATA
		marrAddToRibbon(i).sAddAfterControlName		= "TableFileOpenGallerySplitButton"
	End If
	If CONFIGReadKey(FILE_INI, "SETTINGS", "ADDTOMAPTAB") = "1" Then
		i = i + 1
		Redim marrAddToRibbon(i)
		marrAddToRibbon(i).sTabName				= TAB_MAP
		marrAddToRibbon(i).sGroupName				= TAB_GROUP_MAP_FILE
		marrAddToRibbon(i).sAddAfterControlName		= "MapFileOpenGallerySplitButton"
	End If
	If CONFIGReadKey(FILE_INI, "SETTINGS", "ADDTOLAYOUTTAB") = "1" Then
		i = i + 1
		Redim marrAddToRibbon(i)
		marrAddToRibbon(i).sTabName				= TAB_LAYOUT
		marrAddToRibbon(i).sGroupName				= TAB_GROUP_LAYOUT_PAGE
		marrAddToRibbon(i).sAddAfterControlName		= "LayoutFileOpenGallerySplitButton"
	End If

	If CONFIGReadKey(FILE_INI, "SETTINGS", "USELARGEICONS") = "1" Then
		mnImageSize = CONTROL_SIZE_LARGE
	Else
		mnImageSize = CONTROL_SIZE_SMALL
	End If

	mnWrapPanelWidth	= Val(CONFIGReadKey(FILE_INI, "SETTINGS", "PANELWIDTH"))
	mnWrapPanelWidth	= IIf(mnWrapPanelWidth < 50, 200, mnWrapPanelWidth)

	mnButtonWidth		= Val(CONFIGReadKey(FILE_INI, "SETTINGS", "BUTTONWIDTH"))
	mnButtonWidth		= IIf(mnButtonWidth < 10, 40, mnButtonWidth)

	msButtonCaption	= CONFIGReadKey(FILE_INI, "SETTINGS", "BUTTONCAPTION")
	msButtonCaption	= IIf(msButtonCaption = "", "Favorite Maps", msButtonCaption)

	mbShowSaveLayerSettingMenu	= (CONFIGReadKey(FILE_INI, "SETTINGS", "SHOWSAVELAYERSETTINGMENU") = "1")
	mbShowAddLayerMenu			= (CONFIGReadKey(FILE_INI, "SETTINGS", "SHOWADDLAYERMENU") = "1")

	'ButtonType: 9=ControlType_DropDownButton, 10=ControlType_SplitButton
	mnButtonType	= Val(CONFIGReadKey(FILE_INI, "SETTINGS", "BUTTONTYPE"))
	If Not mnButtonType In (ControlType_DropDownButton, ControlType_SplitButton) Then
		mnButtonType	= ControlType_SplitButton
	End If

	'PanelType: 11=ControlType_DropDownMenuGroup, 22=ControlType_StackPanel, 25=ControlType_WrapPanel
	mnPanelType	= Val(CONFIGReadKey(FILE_INI, "SETTINGS", "PANELTYPE"))
	If Not mnPanelType In (ControlType_DropDownMenuGroup, ControlType_StackPanel, ControlType_WrapPanel) Then
		mnPanelType	= ControlType_WrapPanel
	End If


	nMap			= 0
	nCount 		= 0
	Do While TRUE
		nMap			= nMap + 1
		sCaption		= CONFIGReadKey(FILE_INI, "CUSTOM GROUPS", "CAPTION" & nMap)

		If sCaption <> "" Then
			nCount = nCount + 1
			Redim marrFavoriteGroups(nCount)

			marrFavoriteGroups(nCount).sCaption	= sCaption
			Redim marrFavoriteGroups(nCount).arrNames(Ubound(marrAddToRibbon))
			Call DLGFMCAddToCustomGroupNames(sCaption)

'			Call DEBUGPrint(nCount & ": '" & marrFavoriteGroups(nCount).sCaption & "'")

			nNoneFound = 0
		Else
'			Call DEBUGPrint(nMap & ": Group Not Found!")
			nNoneFound = nNoneFound + 1

			If nNoneFound > 3 Then
				Exit Do
			End If
		End If
	Loop

	If Ubound(marrFavoriteGroups) = 0 Then
		Redim marrFavoriteGroups(1)
		marrFavoriteGroups(1).sCaption	= msButtonCaption
		Redim marrFavoriteGroups(1).arrNames(Ubound(marrAddToRibbon))
		Call DLGFMCAddToCustomGroupNames("Favorite Maps")
	End If

	nMap			= 0
	nCount 		= 0
	Do While TRUE
		nMap			= nMap + 1

		sName		= CONFIGReadKey(FILE_INI, "FAVORITE MAPS " & nMap, "NAME")
		sImageFile	= CONFIGReadKey(FILE_INI, "FAVORITE MAPS " & nMap, "IMAGEFILE")
		sTabFile		= CONFIGReadKey(FILE_INI, "FAVORITE MAPS " & nMap, "TABFILE")

'		Call DEBUGPrint(nCount & ": '" & sName & "', '" & sImageFile & "', '" & sTabFile & "'")
		If sName <> "" AND sImageFile <> "" AND sTabFile <> "" Then

			nCount = nCount + 1
			Redim marrFavoriteMaps(nCount)

			marrFavoriteMaps(nCount).sName			= sName
			marrFavoriteMaps(nCount).sImageFile		= FILEGetAbsolutePath(ApplicationDirectory$(), sImageFile)
			marrFavoriteMaps(nCount).sTabFile			= FILEGetAbsolutePath(ApplicationDirectory$(), sTabFile)

			marrFavoriteMaps(nCount).sLyrSettings		= CONFIGReadKey(FILE_INI, "FAVORITE MAPS " & nMap, "LAYERSETTING")
			marrFavoriteMaps(nCount).sLblSettings		= CONFIGReadKey(FILE_INI, "FAVORITE MAPS " & nMap, "LABELSETTING")

			marrFavoriteMaps(nCount).bShowOnOpenList	= (CONFIGReadKey(FILE_INI, "FAVORITE MAPS " & nMap, "SHOWONOPENCTRL") = "1")
			marrFavoriteMaps(nCount).bShowOnCustomList	= (CONFIGReadKey(FILE_INI, "FAVORITE MAPS " & nMap, "SHOWONCUSTOMCTRL") = "1")
			marrFavoriteMaps(nCount).sCustomGroupName	= CONFIGReadKey(FILE_INI, "FAVORITE MAPS " & nMap, "CUSTOMGROUPNAME")

'			Call DEBUGPrint(nCount & ": '" & marrFavoriteMaps(nCount).sImageFile & "'")

			nNoneFound = 0
		Else
'			Call DEBUGPrint(nMap & ": Map Not Found!")
			nNoneFound = nNoneFound + 1

			If nNoneFound > 3 Then
				Exit Do
			End If
		End If
	Loop

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "MENUReadConfigFile")
	Call ERRShow()

End Sub